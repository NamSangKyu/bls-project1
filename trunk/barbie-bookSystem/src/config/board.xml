<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" 
"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="board">
	<!-- 별칭지정 -->
	<typeAlias alias="boardvo" type="model.vo.BoardVO"/>
	<typeAlias alias="bcvo" type="model.vo.BoardCommentVO"/>
	<!-- 게시물을 DB 에 저장하는 과정 boardNo 하고 boardDate 정보 추가 이때 boardNo 는 boardvo 에 자동 setting 됨 -->
	<insert id="insert" parameterClass="boardvo">
		<selectKey keyProperty="boardNo" resultClass="int">
			select bls_board_seq.nextval from dual
		</selectKey>
		<!-- insert 시에 count/commentCount 는 default 값으로 0 이 주어지고 ref 에는 boardNo 값이 restep, relevel 에는 int 형 초기화 값인 0 저장 -->
		insert into bls_board(boardNo, title, memberId, boardDate, orgFileName, newFileName, cont, ref, restep, relevel)
		values(#boardNo#, #title#, #memberId#, sysdate, #orgFileName#, #newFileName#, #cont#, #boardNo#, #restep#, #relevel#)
	</insert>	
	
	<!-- 게시물을 쓴 다음에 날짜정보를 보여주기 위해 boardvo 에 setting -->
	<select id="getBoardDate" parameterClass="int" resultClass="string">
		select to_char(boardDate,'YYYY.MM.DD HH24:MI') as boardDate from bls_board where boardNo=#value#
	</select>
	
	<!-- 해당 게시물 삭제 -->
	<delete id="delete" parameterClass="string">
		delete from bls_board where boardNo=#value#
	</delete>
	
	<!-- 해당 게시물 보기 전 count 증가 -->
	<update id="updateCount" parameterClass="string">
		update bls_board set count=count+1 where boardNo=#value#
	</update>
	
	<!-- 해당 게시물 보기 -->
	<select id="showContent" parameterClass="string" resultClass="boardvo">
		select boardNo, title, memberId, to_char(boardDate,'YYYY.MM.DD HH24:MI') as boardDate, count, orgFileName, newFileName, cont, ref, restep, relevel from bls_board where boardNo=#value#
	</select>
	
	<!-- 해당 게시물 수정(title, orgFileName, newFileName, cont) -->
	<update id="updateContent" parameterClass="boardvo">
		update bls_board set title=#title#, orgFileName=#orgFileName#, newFileName=#newFileName#, cont=#cont# where boardNo=#boardNo#
	</update>
	
	<!-- PagingBean 생성을 위한 전체 게시물 수 -->
	<select id="totalContent" resultClass="int">
		select count(*) from bls_board
	</select>

	<!-- PagingBean 생성을 위한 전체 댓글 수 -->	
	<select id="totalComment" resultClass="int">
		select count(*) from bls_board_comment where boardNo=#value#
	</select>
	
	<!-- PagingBean 을 적용한 전체 게시물 목록(조건추가 1. 작성시간이 오늘 날짜일 경우엔 시간으로만 표기 아닌 경우는 날짜로 표기 -->
	<select id="list" parameterClass="hashmap" resultClass="boardvo">
		select boardNo, title, memberId, memberId, boardDate, count, commentCount, orgFileName, newFileName, cont, ref, restep, relevel from
		(select ceil(rownum/#num#) as page, boardNo, title, memberId, boardDate, count, commentCount, orgFileName, newFileName, cont, ref, restep, relevel from
		(select boardNo, title, memberId, count, commentCount, orgFileName, newFileName, cont, ref, restep, relevel,
		case to_char(boardDate) when to_char(sysdate) then to_char(boardDate, 'HH24:MI')
		else to_char(boardDate, 'YYYY.MM.DD')
		end as boardDate
		from bls_board order by ref desc, restep asc)) where page=#page#
	</select>

	<!-- PagingBean 을 적용한 전체 게시물 댓글 목록 -->
	<select id="commentList" parameterClass="hashmap" resultClass="bcvo">
		select commentNo, boardNo, memberId, to_char(commentDate,'YYYY.MM.DD HH24:MI') as commentDate, cont from
		(select ceil(rownum/#num#) as page, commentNo, boardNo, memberId, commentDate, cont from
		(select commentNo, boardNo, memberId, commentDate, cont from
		bls_board_comment order by commentNo asc) where boardNo=#boardNo#) where page=#page#
	</select>
	
	<!-- 답글 작성 전 원글의 restep 보다 큰 값 +1 증가 -->
	<update id="updateRestep">
		update bls_board set restep=restep+1 where ref=#ref# and restep>#restep#
	</update>
	
	<!-- 답글을 DB 에 저장하는 과정 boardNo 하고 boardDate 정보 추가 이때 boardNo 는 boardvo 에 자동 setting 됨 -->
	<insert id="replyContent" parameterClass="boardvo">
		<selectKey keyProperty="boardNo" resultClass="int">
			select bls_board_seq.nextval from dual
		</selectKey>
		<!-- insert 시에 count 는 default 값으로 0 이 주어지고 ref 에는 원글의 ref 값이 restep, relevel 에는 각각 +1 증가-->
		insert into bls_board(boardNo, title, memberId, boardDate, orgFileName, newFileName, cont, ref, restep, relevel)
		values(#boardNo#, #title#, #memberId#, sysdate, #orgFileName#, #newFileName#, #cont#, #ref#, #restep#, #relevel#)
	</insert>	
	
	<!-- 현재 게시물의 이전 과 다음 게시물을 가져오는 로직 -->
	<select id="NextAndPreContent" resultClass="hashmap">
		select * from(select boardNo, memberId, boardDate,
		lead(title,1,'이전 게시물이 존재하지 않습니다') over (order by boardNo) pre_title,
    	lead(boardNo,1,'0') over (order by boardNo) pre_boardNo,
    	lag(title,1,'다음 게시물이 존재하지 않습니다') over (order by boardNo) next_title,
    	lag(boardNo,1,'0') over (order by boardNo) next_boardNo
    	from bls_board where relevel='0') where boardNo=#value#
	</select>
	
	<!-- 해당 게시물 댓글 달기 전 commentCount 증가 -->
	<update id="plusCommentCount">
		update bls_board set commentCount=commentCount+1 where boardNo=#value#
	</update>
	
	<!-- 해당 게시물 댓글 달기 전 commentCount 감소 -->
	<update id="minusCommentCount">
		update bls_board set commentCount=commentCount-1 where boardNo=#value#
	</update>
	
	<!-- 댓글을 DB 에 저장하는 과정 commentNo 하고 commentDate 정보 추가 이때 commentNo 는 bcvo 에 자동 setting 됨 -->
	<insert id="commentContent" parameterClass="bcvo">
		<selectKey keyProperty="commentNo" resultClass="int">
			select bls_board_comment_seq.nextval from dual
		</selectKey>
		insert into bls_board_comment(commentNo, boardNo, memberId, commentDate, cont)
		values(#commentNo#, #boardNo#, #memberId#, sysdate, #cont#)
	</insert>	

	<!-- 댓글을 쓴 다음에 날짜정보를 보여주기 위해 bcvo 에 setting -->
	<select id="getCommentDate" resultClass="string">
		select to_char(commentDate,'YYYY.MM.DD HH24:MI') as commentDate from bls_board_comment where commentNo=#value#
	</select>
	
	<!-- 댓글 수정 -->
	<update id="commentUpdate" parameterClass="bcvo">
		update bls_board_comment set cont=#cont#, commentDate=sysdate where commentNo=#commentNo# 
	</update>
	
	<!-- 댓글 삭제 -->
	<delete id="commentDelete">
		delete from bls_board_comment where commentNo=#value#
	</delete>
	
	<!-- 해당 게시물 댓글 전체 삭제 -->
	<delete id="deleteComment" parameterClass="string">
		delete from bls_board_comment where boardNo=#value#
	</delete>
</sqlMap>